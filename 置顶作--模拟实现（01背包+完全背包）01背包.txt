最简代码预览：

01背包

int w[35], v[35], dp[205];
int main()
{
	int m, n;
	cin >> m>>n;
	for (int i = 1; i <= n; i++) cin >> w[i] >> v[i];
	for (int i = 1; i <= n; i++) {  // 物体序号
		for (int j = m; j >=w[i]; j--) {  //背包容量，逆序查找
			dp[j] = max(dp[j], dp[j - w[i]] + v[i]);
		}
	}
	cout << dp[m];
}


完全背包

int w[35], v[35], dp[205];
int main()
{
	int m, n;
	cin >> m>>n;
	for (int i = 1; i <= n; i++) cin >> w[i] >> v[i];
	for (int i = 1; i <= n; i++)   // 物体序号
		for (int j = w[i]; j <= m; j++)  //顺序查找
			dp[j] = max(dp[j], dp[j - w[i]] + v[i]);

	cout << dp[m];
}





第一行是m,n，表示背包容量是m，有n个物体（每个物体不重复，有且仅有一个）
接下来n行，每行俩数，分别是物体的质量和价值。
求该背包能装下的最大价值。


测试用例：
输入：
10 4
2 1
3 3
4 5
7 9

输出：
12


