黑洞数也称为陷阱数，又称“Kaprekar问题”，是一类具有奇特转换特性的数。任何一个各位数字不全相同的三位数，经有限次“重排求差”操作，总会得到495。最后所得的495即为三位黑洞数。所谓“重排求差”操作即组成该数的数字重排后的最大数减去重排后的最小数。

例如，对三位数207：第1次重排求差得：720 - 27 ＝ 693；第2次重排求差得：963 - 369 ＝ 594；第3次重排求差得：954 - 459 ＝ 495；编写程序,实现如下功能：输入一个三位整数，输出将其转换为黑洞数的过程，输入输出格式为：
输入： 207
输出：
1：720-27=693
2：963-369=594
3：954-459=495




#include<stdio.h>
int main()
{
	int n = 0, t = 0, a = 0, b = 0, c = 0, j, max = 0, min = 0;
	scanf("%d", &n);
	while (n != 495 || t == 0) {       //判断t==0  控制输入495时 进入一次循环
		a = n / 100; b = (n % 100) / 10; c = n % 10;//提取 个 十 百 数位
		if (a < b) { j = a; a = b; b = j; } 
		if (a < c) { j = a; a = c; c = j; }
		if (b < c) { j = b; b = c; c = j; }   //排序
		max = a * 100 + b * 10 + c;
		min = c * 100 + b * 10 + a;       
		n = max - min;
		printf("%d: %d - %d = %d\n", ++t, max, min, n);
	}
	return 0;
}
//无论你如何组合，你终将属于我，因为我是你唯一的495