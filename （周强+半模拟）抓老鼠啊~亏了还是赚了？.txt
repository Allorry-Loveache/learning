//周强我xxxx(省略1000+）
//一定好好看例子，夹子和奶酪并不是放置后就不收回了，是当天就收回

某地老鼠成灾，现悬赏抓老鼠，每抓到一只奖励10元，于是开始跟老鼠斗智斗勇：每天在墙角可选择以下三个操作：放置一个带有一块奶酪的捕鼠夹(T)，或者放置一块奶酪(C)，或者什么也不放(X)。捕鼠夹可重复利用，不计成本，奶酪每块3元。
聪明的老鼠呢？它们每天可能会派出一只老鼠到墙角，看看墙角有啥：

若什么也没有(X)，老鼠们就不高兴了(Unhappy)，会有长达一天（也就是第二天）的不高兴期。在不高兴期间，不派出老鼠。不高兴期结束之后，派出老鼠。
若有捕鼠夹(T)，这只老鼠被引诱吃掉奶酪并被打死(Dead)，老鼠们会有长达两天（也就是第二和第三天）的伤心期。在伤心期间，不派出老鼠。伤心期结束之后，派出老鼠。在这种情况下，抓到1只老鼠可获得奖励10元，但同时也耗费了一块奶酪。注意，如果某一天放置了捕鼠夹但老鼠没有出现，则没有耗费奶酪。
若有奶酪(C)，老鼠吃了奶酪会很开心(Happy!)，会有长达两天（第二和第三天）的兴奋期。在兴奋期间，即使叠加了不高兴或者伤心，也必定派出老鼠。在这种情况下，没抓到老鼠，而且耗费了一块奶酪。注意，如果某一天放置了奶酪但老鼠没有出现，则奶酪可以下次再用，没有耗费。
现在给你连续几天的操作序列，且已知第一天肯定会派出老鼠，请判断老鼠每天的状态，并计算盈利。

输入格式:
输入在一行中给出连续的由C或T或X组成的不超过70个字符的字符串，以$结束。字符串中每个字符表示这一天的操作( 即X：什么都不放；T：放捕鼠夹；C：放奶酪）。题目保证至少有一天的操作输入。

输出格式:
要求在第一行输出连续的字符串，与输入相对应，给出老鼠的状态：

! 表示派出老鼠吃到奶酪
D 表示派出老鼠被打死
U 表示派出老鼠无所获
- 表示没有派出老鼠
第二行则应输出一个整数表示盈利。（如果有亏损，则是负数）

输入样例1:
TXXXXC$
结尾无空行
输出样例1:
D--U-! 
4
结尾无空行
输入样例2:
CTTCCX$
输出样例2:
!DD--U 
11



#include<stdio.h>
int b[100];
int main()
{                                   //汤姆的赚钱之旅
	int i, count = 0;  char input; 
	for (i = 0; i < 100; i++)  b[i] = 1; //杰瑞默认每天都出来，数组初始化为1
	for(i=0;;i++) {
		input=getchar();
		if (input == '$') break;
		if (b[i]) {     //核心是看杰瑞是否出来，而且明确知道第一天必出
			if (input=='T') {  //哟，小老弟，来尝尝啊？
				count += 7;    //赔了一个奶酪，赚了一个杰瑞，折合7块
				if (b[i + 1] != 2) b[i + 1] = 0; //不是极度兴奋的话，就进入伤心期
				if (b[i + 2] != 2) b[i + 2] = 0;
				putchar('D');
			}
			else if (input == 'C') { //纯放奶酪，汤姆放长线钓大鱼
				count -= 3;          //真香，-3￥
				b[i + 1] = b[i + 2] = 2;  //吃到了，好兴奋呢~，下次还来
				putchar('!');
			}
			else if (input == 'X') {   //啥都没有，杰瑞白跑一趟，不开心呢~
				putchar('U');
				if (b[i + 1] != 2) b[i + 1] = 0;//不在兴奋期就不开心期
			}
		}
		else putchar('-'); //我心爱的杰瑞，你为什么躲着我？
	}
	puts("");
	printf("%d", count);
}